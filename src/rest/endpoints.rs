pub enum API {
  Spot(Spot),
  Savings(Savings),
  Futures(Futures),
}

/// Endpoint for production and test orders.
///
/// Orders issued to test are validated, but not sent into the matching engine.
pub enum Spot {
  Ping,
  Time,
  ExchangeInfo,
  Depth,
  Trades,
  HistoricalTrades,
  AggTrades,
  Klines,
  AvgPrice,
  Ticker24hr,
  Price,
  BookTicker,
  Order,
  OrderTest,
  OpenOrders,
  AllOrders,
  Oco,
  OrderList,
  AllOrderList,
  OpenOrderList,
  Account,
  MyTrades,
  RateLimitOrder,
  MyPreventedMatches,
  MyAllocations,
  AccountCommissions,
  UserDataStream,
}

pub enum Savings {
  AllCoins,
  AssetDetail,
  DepositAddress,
  SpotFuturesTransfer,
}

pub enum Futures {
  Ping,
  Time,
  ExchangeInfo,
  Depth,
  Trades,
  HistoricalTrades,
  AggTrades,
  Klines,
  ContinuousKlines,
  IndexPriceKlines,
  MarkPriceKlines,
  PremiumIndex,
  FundingRate,
  Ticker24hr,
  TickerPrice,
  BookTicker,
  AllForceOrders,
  AllOpenOrders,
  AllOrders,
  UserTrades,
  Order,
  PositionRisk,
  Balance,
  PositionSide,
  OpenInterest,
  OpenInterestHist,
  TopLongShortAccountRatio,
  TopLongShortPositionRatio,
  GlobalLongShortAccountRatio,
  TakerlongshortRatio,
  LvtKlines,
  IndexInfo,
  ChangeInitialLeverage,
  MarginType,
  PositionMargin,
  Account,
  OpenOrders,
  UserDataStream,
  Income,
}

impl AsRef<str> for API {
  fn as_ref(&self) -> &str {
    match self {
      API::Spot(route) => match route {
        Spot::Ping => "/api/v3/ping",
        Spot::Time => "/api/v3/time",
        Spot::ExchangeInfo => "/api/v3/exchangeInfo",
        Spot::Depth => "/api/v3/depth",
        Spot::Trades => "/api/v3/trades",
        Spot::HistoricalTrades => "/api/v3/historicalTrades",
        Spot::AggTrades => "/api/v3/aggTrades",
        Spot::Klines => "/api/v3/klines",
        Spot::AvgPrice => "/api/v3/avgPrice",
        Spot::Ticker24hr => "/api/v3/ticker/24hr",
        Spot::Price => "/api/v3/ticker/price",
        Spot::BookTicker => "/api/v3/ticker/bookTicker",
        Spot::Order => "/api/v3/order",
        Spot::OrderTest => "/api/v3/order/test",
        Spot::OpenOrders => "/api/v3/openOrders",
        Spot::AllOrders => "/api/v3/allOrders",
        Spot::Oco => "/api/v3/order/oco",
        Spot::OrderList => "/api/v3/orderList",
        Spot::AllOrderList => "/api/v3/allOrderList",
        Spot::OpenOrderList => "/api/v3/openOrderList",
        Spot::Account => "/api/v3/account",
        Spot::MyTrades => "/api/v3/myTrades",
        Spot::RateLimitOrder => "/api/v3/rateLimit/order",
        Spot::MyPreventedMatches => "/api/v3/myPreventedMatches",
        Spot::MyAllocations => "/api/v3/myAllocations",
        Spot::AccountCommissions => "/api/v3/account/commission",
        Spot::UserDataStream => "/api/v3/userDataStream",
      },
      API::Savings(route) => match route {
        Savings::AllCoins => "/savings/v1/capital/config/getall",
        Savings::AssetDetail => "/savings/v1/asset/assetDetail",
        Savings::DepositAddress => "/savings/v1/capital/deposit/address",
        Savings::SpotFuturesTransfer => "/savings/v1/futures/transfer",
      },
      API::Futures(route) => match route {
        Futures::Ping => "/futures/v1/ping",
        Futures::Time => "/futures/v1/time",
        Futures::ExchangeInfo => "/futures/v1/exchangeInfo",
        Futures::Depth => "/futures/v1/depth",
        Futures::Trades => "/futures/v1/trades",
        Futures::HistoricalTrades => "/futures/v1/historicalTrades",
        Futures::AggTrades => "/futures/v1/aggTrades",
        Futures::Klines => "/futures/v1/klines",
        Futures::ContinuousKlines => "/futures/v1/continuousKlines",
        Futures::IndexPriceKlines => "/futures/v1/indexPriceKlines",
        Futures::MarkPriceKlines => "/futures/v1/markPriceKlines",
        Futures::PremiumIndex => "/futures/v1/premiumIndex",
        Futures::FundingRate => "/futures/v1/fundingRate",
        Futures::Ticker24hr => "/futures/v1/ticker/24hr",
        Futures::TickerPrice => "/futures/v1/ticker/price",
        Futures::BookTicker => "/futures/v1/ticker/bookTicker",
        Futures::AllForceOrders => "/futures/v1/allForceOrders",
        Futures::AllOpenOrders => "/futures/v1/allOpenOrders",
        Futures::AllOrders => "/futures/v1/allOrders",
        Futures::UserTrades => "/futures/v1/userTrades",
        Futures::PositionSide => "/futures/v1/positionSide/dual",
        Futures::Order => "/futures/v1/order",
        Futures::PositionRisk => "/futures/v2/positionRisk",
        Futures::Balance => "/futures/v2/balance",
        Futures::OpenInterest => "/futures/v1/openInterest",
        Futures::OpenInterestHist => "/futures/data/openInterestHist",
        Futures::TopLongShortAccountRatio => "/futures/data/topLongShortAccountRatio",
        Futures::TopLongShortPositionRatio => "/futures/data/topLongShortPositionRatio",
        Futures::GlobalLongShortAccountRatio => "/futures/data/globalLongShortAccountRatio",
        Futures::TakerlongshortRatio => "/futures/data/takerlongshortRatio",
        Futures::LvtKlines => "/futures/v1/lvtKlines",
        Futures::IndexInfo => "/futures/v1/indexInfo",
        Futures::ChangeInitialLeverage => "/futures/v1/leverage",
        Futures::MarginType => "/futures/v1/marginType",
        Futures::PositionMargin => "/futures/v1/positionMargin",
        Futures::Account => "/futures/v2/account",
        Futures::OpenOrders => "/futures/v1/openOrders",
        Futures::UserDataStream => "/futures/v1/listenKey",
        Futures::Income => "/futures/v1/income",
      },
    }
  }
}
